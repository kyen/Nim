/* Generated by the Nim Compiler v1.1.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI1123065 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI10806058 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1128899 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10960570 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1747448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1747205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1747283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1747281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1747227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1747565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1747563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1747561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1747231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1747229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1749305 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1128887 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1128895 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1123045 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1285043 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1128808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1128933 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1123055 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI1123014 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1123016 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI1128927 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1128863 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1128865 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1128879 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1128883 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1128883 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1128883.node = NNI1128883;
var NNI1128879 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1128879.node = NNI1128879;
var NNI1128865 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1128865.node = NNI1128865;
NTI1128927.base = NTI1128863;
NTI1128933.base = NTI1128863;
var NNI1128863 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1128927, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1123016, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI1123014, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI1123014, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI1123055, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI1128933, name: "up", sons: null}]};
NTI1128863.node = NNI1128863;
var NNI1128808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1128808.node = NNI1128808;
NTI1128863.base = NTI1128808;
NTI1128865.base = NTI1128863;
NTI1128879.base = NTI1128865;
NTI1128883.base = NTI1128879;
var NNI1285043 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1123016, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1123045, name: "Field1", sons: null}]};
NTI1285043.node = NNI1285043;
var NNI1128895 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1128895.node = NNI1128895;
NTI1128895.base = NTI1128865;
var NNI1128887 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1128887.node = NNI1128887;
NTI1128887.base = NTI1128865;
NTI1747561.base = NTI1747229;
NTI1747563.base = NTI1747229;
NTI1747565.base = NTI1747229;
var NNI1747227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1747227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1747227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1747227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1747227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1747227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1747227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1747227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1747227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1747227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1747227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1747227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1747227, name: "NotationNode", len: 0, sons: null}}};
NTI1747227.node = NNI1747227;
var NNI1747283 = {kind: 2, len: 92, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI1123016, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI1123016, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI1123016, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI1123016, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI1123016, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI1123016, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI1123016, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI1123016, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI1123016, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI1123016, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI1123016, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI1123016, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI1123016, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI1123016, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI1123016, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI1123016, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI1123016, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI1123016, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI1123016, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI1123016, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI1123016, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI1123016, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI1123016, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI1123016, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI1123016, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI1123016, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI1123016, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI1123016, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI1123016, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI1123016, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI1123016, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI1123016, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI1123016, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI1123016, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI1123016, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI1123016, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI1123016, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI1123016, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI1123016, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI1123016, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI1123016, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI1123016, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI1123016, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1123016, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI1123016, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI1123016, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI1123016, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI1123016, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI1123016, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI1123016, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI1123016, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI1123016, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI1123016, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI1123016, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI1123016, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI1123016, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI1123016, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI1123016, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI1123016, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI1123016, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI1123016, name: "opacity", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI1123016, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI1123016, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI1123016, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI1123016, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI1123016, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI1123016, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI1123016, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI1123016, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI1123016, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI1123016, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI1123016, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI1123016, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI1123016, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI1123016, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI1123016, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI1123016, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI1123016, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI1123016, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI1123016, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI1123016, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI1123016, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI1123016, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI1123016, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI1123016, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI1123016, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI1123016, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI1123016, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI1123016, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1123016, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI1123016, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI1123045, name: "zIndex", sons: null}]};
NTI1747283.node = NNI1747283;
NTI1747283.base = NTI1128808;
NTI1747281.base = NTI1747283;
var NNI1747231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1747561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1747563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1747565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI1123016, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1747229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1747229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1747229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI1123016, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1747227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI1123016, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1747229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1747229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI1123016, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1747281, name: "style", sons: null}]};
NTI1747231.node = NNI1747231;
var NNI1747205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1747372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1747376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1747380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1747384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1747388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1747392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1747396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1747400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1747404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1747408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1747412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1747416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1747420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1747424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1747428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1747432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1747436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1747440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1747444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1747448, name: "onunload", sons: null}]};
NTI1747205.node = NNI1747205;
NTI1747205.base = NTI1128808;
NTI1747231.base = NTI1747205;
NTI1747229.base = NTI1747231;
NTI1749305.base = NTI1747229;
NTI10960570.base = NTI1123016;
var NNI1128899 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1128899.node = NNI1128899;
NTI1128899.base = NTI1128865;
var NNI10806058 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1123045, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1123065, name: "Field1", sons: null}]};
NTI10806058.node = NNI10806058;

function makeNimstrLit(c_1350270) {
      var ln = c_1350270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_1350270.charCodeAt(i);
  }
  return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_1365023, src_1365024, ti_1365025) {
  var result_1370219 = null;

    switch (ti_1365025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_1360601(ti_1365025))) {
      result_1370219 = src_1365024;
      }
      else {
        result_1370219 = [src_1365024[0], src_1365024[1]];
      }
      
      break;
    case 19:
            if (dest_1365023 === null || dest_1365023 === undefined) {
        dest_1365023 = {};
      }
      else {
        for (var key in dest_1365023) { delete dest_1365023[key]; }
      }
      for (var key in src_1365024) { dest_1365023[key] = src_1365024[key]; }
      result_1370219 = dest_1365023;
    
      break;
    case 18:
    case 17:
      if (!((ti_1365025.base == null))) {
      result_1370219 = nimCopy(dest_1365023, src_1365024, ti_1365025.base);
      }
      else {
      if ((ti_1365025.kind == 17)) {
      result_1370219 = (dest_1365023 === null || dest_1365023 === undefined) ? {m_type: ti_1365025} : dest_1365023;
      }
      else {
        result_1370219 = (dest_1365023 === null || dest_1365023 === undefined) ? {} : dest_1365023;
      }
      }
      nimCopyAux(result_1370219, src_1365024, ti_1365025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_1365024 === null) {
        result_1370219 = null;
      }
      else {
        if (dest_1365023 === null || dest_1365023 === undefined) {
          dest_1365023 = new Array(src_1365024.length);
        }
        else {
          dest_1365023.length = src_1365024.length;
        }
        result_1370219 = dest_1365023;
        for (var i = 0; i < src_1365024.length; ++i) {
          result_1370219[i] = nimCopy(result_1370219[i], src_1365024[i], ti_1365025.base);
        }
      }
    
      break;
    case 28:
            if (src_1365024 !== null) {
        result_1370219 = src_1365024.slice(0);
      }
    
      break;
    default: 
      result_1370219 = src_1365024;
      break;
    }

  return result_1370219;

}

function arrayConstr(len_1375067, value_1375068, typ_1375069) {
        var result = new Array(len_1375067);
    for (var i = 0; i < len_1375067; ++i) result[i] = nimCopy(null, value_1375068, typ_1375069);
    return result;
  

  
}

function cstrToNimstr(c_1350287) {
      var ln = c_1350287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_1350287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_1350287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_1350304) {
                    var Tmp5;
            var Tmp7;

  var result_1350305 = null;

    var res_1350378 = new_seq_1350336((s_1350304 != null ? s_1350304.length : 0));
    var i_1350380 = 0;
    var j_1350382 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1350380 < (s_1350304 != null ? s_1350304.length : 0))) break L2;
          var c_1350383 = s_1350304[i_1350380];
          if ((c_1350383 < 128)) {
          res_1350378[j_1350382] = String.fromCharCode(c_1350383);
          i_1350380 += 1;
          }
          else {
            var helper_1350406 = new_seq_1350336(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_1350407 = c_1350383.toString(16);
                  if (((code_1350407 != null ? code_1350407.length : 0) == 1)) {
                  if (helper_1350406 != null) { helper_1350406.push("%0"); } else { helper_1350406 = ["%0"]; };
                  }
                  else {
                  if (helper_1350406 != null) { helper_1350406.push("%"); } else { helper_1350406 = ["%"]; };
                  }
                  
                  if (helper_1350406 != null) { helper_1350406.push(code_1350407); } else { helper_1350406 = [code_1350407]; };
                  i_1350380 += 1;
                    if (((s_1350304 != null ? s_1350304.length : 0) <= i_1350380)) Tmp5 = true; else {                      Tmp5 = (s_1350304[i_1350380] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_1350383 = s_1350304[i_1350380];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_1350378[j_1350382] = decodeURIComponent(helper_1350406.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_1350378[j_1350382] = helper_1350406.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_1350382 += 1;
        }
    } while(false);
    if (res_1350378 === null) res_1350378 = [];
               if (res_1350378.length < j_1350382) { for (var i=res_1350378.length;i<j_1350382;++i) res_1350378.push(null); }
               else { res_1350378.length = j_1350382; };
    result_1350305 = res_1350378.join("");

  return result_1350305;

}

function raiseException(e_1315218, ename_1315219) {
    e_1315218.name = ename_1315219;
    if ((excHandler == 0)) {
    unhandledException(e_1315218);
    }
    
    e_1315218.trace = nimCopy(null, raw_write_stack_trace_1305059(), NTI1123014);
    throw e_1315218;

  
}

function addInt(a_1355403, b_1355404) {
        var result = a_1355403 + b_1355404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}

function chckIndx(i_1375086, a_1375087, b_1375088) {
      var Tmp1;

  var result_1375089 = 0;

  BeforeRet: do {
      if (!(a_1375087 <= i_1375086)) Tmp1 = false; else {        Tmp1 = (i_1375086 <= b_1375088);      }    if (Tmp1) {
    result_1375089 = i_1375086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_1375086, a_1375087, b_1375088);
    }
    
  } while (false);

  return result_1375089;

}

function subInt(a_1355421, b_1355422) {
        var result = a_1355421 - b_1355422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);

function chckRange(i_1380016, a_1380017, b_1380018) {
      var Tmp1;

  var result_1380019 = 0;

  BeforeRet: do {
      if (!(a_1380017 <= i_1380016)) Tmp1 = false; else {        Tmp1 = (i_1380016 <= b_1380018);      }    if (Tmp1) {
    result_1380019 = i_1380016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_1380019;

}
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_1355439, b_1355440) {
        var result = a_1355439 * b_1355440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_1355821, b_1355822) {
    var Tmp1;

  var result_1355823 = 0;

  BeforeRet: do {
    if ((b_1355822 <= a_1355821)) {
    Tmp1 = a_1355821;
    }
    else {
    Tmp1 = b_1355822;
    }
    
    result_1355823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1355823;

}

function nimMin(a_1355803, b_1355804) {
    var Tmp1;

  var result_1355805 = 0;

  BeforeRet: do {
    if ((a_1355803 <= b_1355804)) {
    Tmp1 = a_1355803;
    }
    else {
    Tmp1 = b_1355804;
    }
    
    result_1355805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1355805;

}
var nim_program_result = 0;
var global_raise_hook_1267018 = [null];
var local_raise_hook_1267023 = [null];
var out_of_mem_hook_1267026 = [null];
var unhandled_exception_hook_1267031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var alternative_10960319 = [null];

function is_fat_pointer_1360601(ti_1360603) {
  var result_1360604 = false;

  BeforeRet: do {
    result_1360604 = !((ConstSet1[ti_1360603.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_1360604;

}

function nimCopyAux(dest_1365028, src_1365029, n_1365031) {
    switch (n_1365031.kind) {
    case 0:
      break;
    case 1:
            dest_1365028[n_1365031.offset] = nimCopy(dest_1365028[n_1365031.offset], src_1365029[n_1365031.offset], n_1365031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_1365031.sons.length; i++) {
      nimCopyAux(dest_1365028, src_1365029, n_1365031.sons[i]);
    }
    
      break;
    case 3:
            dest_1365028[n_1365031.offset] = nimCopy(dest_1365028[n_1365031.offset], src_1365029[n_1365031.offset], n_1365031.typ);
      for (var i = 0; i < n_1365031.sons.length; ++i) {
        nimCopyAux(dest_1365028, src_1365029, n_1365031.sons[i][1]);
      }
    
      break;
    }

  
}

function add_1267043(x_1267046, x_1267046_Idx, y_1267047) {
          if (x_1267046[x_1267046_Idx] === null) { x_1267046[x_1267046_Idx] = []; }
      var off = x_1267046[x_1267046_Idx].length;
      x_1267046[x_1267046_Idx].length += y_1267047.length;
      for (var i = 0; i < y_1267047.length; ++i) {
        x_1267046[x_1267046_Idx][off+i] = y_1267047.charCodeAt(i);
      }
    

  
}

function aux_write_stack_trace_1285038(f_1285040) {
          var Tmp3;

  var result_1285041 = [null];

    var it_1285049 = f_1285040;
    var i_1285051 = 0;
    var total_1285053 = 0;
    var temp_frames_1285060 = arrayConstr(64, {Field0: null, Field1: 0}, NTI1285043);
    L1: do {
        L2: while (true) {
          if (!!((it_1285049 == null))) Tmp3 = false; else {            Tmp3 = (i_1285051 <= 63);          }        if (!Tmp3) break L2;
          temp_frames_1285060[i_1285051].Field0 = it_1285049.procname;
          temp_frames_1285060[i_1285051].Field1 = it_1285049.line;
          i_1285051 += 1;
          total_1285053 += 1;
          it_1285049 = it_1285049.prev;
        }
    } while(false);
    L4: do {
        L5: while (true) {
        if (!!((it_1285049 == null))) break L5;
          total_1285053 += 1;
          it_1285049 = it_1285049.prev;
        }
    } while(false);
    result_1285041[0] = nimCopy(null, [], NTI1123014);
    if (!((total_1285053 == i_1285051))) {
    if (result_1285041[0] != null) { result_1285041[0] = (result_1285041[0]).concat(makeNimstrLit("(")); } else { result_1285041[0] = makeNimstrLit("("); };
    if (result_1285041[0] != null) { result_1285041[0] = (result_1285041[0]).concat(cstrToNimstr(((total_1285053 - i_1285051))+"")); } else { result_1285041[0] = cstrToNimstr(((total_1285053 - i_1285051))+"").slice(); };
    if (result_1285041[0] != null) { result_1285041[0] = (result_1285041[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_1285041[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
    }
    
    L6: do {
      var j_1300236 = 0;
      var colontmp__10960462 = 0;
      colontmp__10960462 = (i_1285051 - 1);
      var res_10960467 = colontmp__10960462;
      L7: do {
          L8: while (true) {
          if (!(0 <= res_10960467)) break L8;
            j_1300236 = res_10960467;
            add_1267043(result_1285041, 0, temp_frames_1285060[j_1300236].Field0);
            if ((0 < temp_frames_1285060[j_1300236].Field1)) {
            if (result_1285041[0] != null) { result_1285041[0] = (result_1285041[0]).concat(makeNimstrLit(", line: ")); } else { result_1285041[0] = makeNimstrLit(", line: "); };
            if (result_1285041[0] != null) { result_1285041[0] = (result_1285041[0]).concat(cstrToNimstr((temp_frames_1285060[j_1300236].Field1)+"")); } else { result_1285041[0] = cstrToNimstr((temp_frames_1285060[j_1300236].Field1)+"").slice(); };
            }
            
            if (result_1285041[0] != null) { result_1285041[0] = (result_1285041[0]).concat(makeNimstrLit("\x0A")); } else { result_1285041[0] = makeNimstrLit("\x0A"); };
            res_10960467 -= 1;
          }
      } while(false);
    } while(false);

  return result_1285041[0];

}

function raw_write_stack_trace_1305059() {
  var result_1305061 = null;

    if (!((framePtr == null))) {
    result_1305061 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_1285038(framePtr) || []), NTI1123014);
    }
    else {
      result_1305061 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI1123014);
    }
    

  return result_1305061;

}

function new_seq_1350336(len_1350339) {
  var result_1350341 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 626;
    result_1350341 = new Array(len_1350339); for (var i=0;i<len_1350339;++i) {result_1350341[i]=null;}  framePtr = F.prev;

  return result_1350341;

}

function unhandledException(e_1310059) {
    var buf_1310060 = [[]];
    if (!(((e_1310059.message != null ? e_1310059.message.length : 0) == 0))) {
    if (buf_1310060[0] != null) { buf_1310060[0] = (buf_1310060[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_1310060[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_1310060[0] != null) { buf_1310060[0] = (buf_1310060[0]).concat(e_1310059.message); } else { buf_1310060[0] = e_1310059.message.slice(); };
    }
    else {
    if (buf_1310060[0] != null) { buf_1310060[0] = (buf_1310060[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_1310060[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_1310060[0] != null) { buf_1310060[0] = (buf_1310060[0]).concat(makeNimstrLit(" [")); } else { buf_1310060[0] = makeNimstrLit(" ["); };
    add_1267043(buf_1310060, 0, e_1310059.name);
    if (buf_1310060[0] != null) { buf_1310060[0] = (buf_1310060[0]).concat(makeNimstrLit("]\x0A")); } else { buf_1310060[0] = makeNimstrLit("]\x0A"); };
    if (buf_1310060[0] != null) { buf_1310060[0] = (buf_1310060[0]).concat(raw_write_stack_trace_1305059()); } else { buf_1310060[0] = raw_write_stack_trace_1305059().slice(); };
    var cbuf_1315201 = toJSStr(buf_1310060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_1315201);
  }
  else {
    throw cbuf_1315201;
  }
  

  
}

function raiseOverflow() {
    var eHEX60gensym1320258_1325203 = null;
    eHEX60gensym1320258_1325203 = {m_type: NTI1128883, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    eHEX60gensym1320258_1325203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI1123014);
    eHEX60gensym1320258_1325203.parent = null;
    raiseException(eHEX60gensym1320258_1325203, "OverflowError");

  
}

function is_whitespace_10935101(text_10935103) {
         return !/[^\s]/.test(text_10935103);
  

  
}

function is_whitespace_10935118(x_10935120) {
    var Tmp1;
    var Tmp2;

  var result_10935121 = false;

  var F={procname:"dochack.isWhitespace",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 134;
    if (!(x_10935120.nodeName == "#text")) Tmp2 = false; else {      Tmp2 = is_whitespace_10935101(x_10935120.textContent);    }    if (Tmp2) Tmp1 = true; else {      Tmp1 = (x_10935120.nodeName == "#comment");    }    result_10935121 = Tmp1;
  framePtr = F.prev;

  return result_10935121;

}

function raiseIndexError(i_1335255, a_1335256, b_1335257) {
    var Tmp1;

    var eHEX60gensym1340202_1345203 = null;
    eHEX60gensym1340202_1345203 = {m_type: NTI1128895, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    if ((b_1335257 < a_1335256)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_1335255)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_1335256)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_1335257)+"") || []);
    }
    
    eHEX60gensym1340202_1345203.message = nimCopy(null, Tmp1, NTI1123014);
    eHEX60gensym1340202_1345203.parent = null;
    raiseException(eHEX60gensym1340202_1345203, "IndexError");

  
}

function to_toc_10935135(x_10935137, father_10935138) {
                var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;
      var Tmp15;

  var F={procname:"dochack.toToc",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    if ((x_10935137.nodeName == "UL")) {
    F.line = 139;
    var f_10935159 = {heading: null, kids: [], sortId: (father_10935138.kids != null ? father_10935138.kids.length : 0), doSort: false};
    F.line = 140;
    var i_10935161 = 0;
    L1: do {
      F.line = 141;
        L2: while (true) {
        if (!(i_10935161 < x_10935137.childNodes.length)) break L2;
          F.line = 142;
          var nxt_10935162 = addInt(i_10935161, 1);
          L3: do {
            F.line = 143;
              L4: while (true) {
                if (!(nxt_10935162 < x_10935137.childNodes.length)) Tmp5 = false; else {                  Tmp5 = is_whitespace_10935118(x_10935137.childNodes[nxt_10935162]);                }              if (!Tmp5) break L4;
                F.line = 144;
                nxt_10935162 = addInt(nxt_10935162, 1);
              }
          } while(false);
            if (!(nxt_10935162 < x_10935137.childNodes.length)) Tmp8 = false; else {              Tmp8 = (x_10935137.childNodes[i_10935161].nodeName == "LI");            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (x_10935137.childNodes[i_10935161].childNodes.length == 1);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (x_10935137.childNodes[nxt_10935162].nodeName == "UL");            }          if (Tmp6) {
          F.line = 147;
          var e_10935189 = {heading: x_10935137.childNodes[i_10935161].childNodes[0], kids: [], sortId: (f_10935159.kids != null ? f_10935159.kids.length : 0), doSort: false};
          F.line = 148;
          var it_10935190 = x_10935137.childNodes[nxt_10935162];
          L9: do {
            F.line = 149;
            var j_10935198 = 0;
            F.line = 104;
            var colontmp__10960442 = 0;
            F.line = 149;
            colontmp__10960442 = it_10935190.childNodes.length;
            F.line = 106;
            var i_10960443 = 0;
            L10: do {
              F.line = 107;
                L11: while (true) {
                if (!(i_10960443 < colontmp__10960442)) break L11;
                  F.line = 149;
                  j_10935198 = i_10960443;
                  F.line = 150;
                  to_toc_10935135(it_10935190.childNodes[j_10935198], e_10935189);
                  F.line = 109;
                  i_10960443 = addInt(i_10960443, 1);
                }
            } while(false);
          } while(false);
          F.line = 151;
          if (f_10935159.kids != null) { f_10935159.kids.push(e_10935189); } else { f_10935159.kids = [e_10935189]; };
          F.line = 152;
          i_10935161 = addInt(nxt_10935162, 1);
          }
          else {
            F.line = 154;
            to_toc_10935135(x_10935137.childNodes[i_10935161], f_10935159);
            F.line = 155;
            i_10935161 = addInt(i_10935161, 1);
          }
          
        }
    } while(false);
    F.line = 156;
    if (father_10935138.kids != null) { father_10935138.kids.push(f_10935159); } else { father_10935138.kids = [f_10935159]; };
    }
    else {
    if (is_whitespace_10935118(x_10935137)) {
    }
    else {
    if ((x_10935137.nodeName == "LI")) {
    F.line = 160;
    var idx_10935235 = [];
    L12: do {
      F.line = 161;
      var i_10935243 = 0;
      F.line = 104;
      var colontmp__10960446 = 0;
      F.line = 161;
      colontmp__10960446 = x_10935137.childNodes.length;
      F.line = 106;
      var i_10960447 = 0;
      L13: do {
        F.line = 107;
          L14: while (true) {
          if (!(i_10960447 < colontmp__10960446)) break L14;
            F.line = 161;
            i_10935243 = i_10960447;
            if (!(is_whitespace_10935118(x_10935137.childNodes[i_10935243]))) {
            F.line = 162;
            if (idx_10935235 != null) { idx_10935235.push(i_10935243); } else { idx_10935235 = [i_10935243]; };
            }
            
            F.line = 109;
            i_10960447 = addInt(i_10960447, 1);
          }
      } while(false);
    } while(false);
      if (!((idx_10935235 != null ? idx_10935235.length : 0) == 2)) Tmp15 = false; else {        Tmp15 = (x_10935137.childNodes[idx_10935235[chckIndx(1, 0, (idx_10935235 != null ? idx_10935235.length : 0)+0-1)-0]].nodeName == "UL");      }    if (Tmp15) {
    F.line = 164;
    var e_10935276 = {heading: x_10935137.childNodes[idx_10935235[chckIndx(0, 0, (idx_10935235 != null ? idx_10935235.length : 0)+0-1)-0]], kids: [], sortId: (father_10935138.kids != null ? father_10935138.kids.length : 0), doSort: false};
    F.line = 166;
    var it_10935277 = x_10935137.childNodes[idx_10935235[chckIndx(1, 0, (idx_10935235 != null ? idx_10935235.length : 0)+0-1)-0]];
    L16: do {
      F.line = 167;
      var j_10935285 = 0;
      F.line = 104;
      var colontmp__10960451 = 0;
      F.line = 167;
      colontmp__10960451 = it_10935277.childNodes.length;
      F.line = 106;
      var i_10960452 = 0;
      L17: do {
        F.line = 107;
          L18: while (true) {
          if (!(i_10960452 < colontmp__10960451)) break L18;
            F.line = 167;
            j_10935285 = i_10960452;
            F.line = 168;
            to_toc_10935135(it_10935277.childNodes[j_10935285], e_10935276);
            F.line = 109;
            i_10960452 = addInt(i_10960452, 1);
          }
      } while(false);
    } while(false);
    F.line = 169;
    if (father_10935138.kids != null) { father_10935138.kids.push(e_10935276); } else { father_10935138.kids = [e_10935276]; };
    }
    else {
      L19: do {
        F.line = 171;
        var i_10935300 = 0;
        F.line = 104;
        var colontmp__10960455 = 0;
        F.line = 171;
        colontmp__10960455 = x_10935137.childNodes.length;
        F.line = 106;
        var i_10960456 = 0;
        L20: do {
          F.line = 107;
            L21: while (true) {
            if (!(i_10960456 < colontmp__10960455)) break L21;
              F.line = 171;
              i_10935300 = i_10960456;
              F.line = 172;
              to_toc_10935135(x_10935137.childNodes[i_10935300], father_10935138);
              F.line = 109;
              i_10960456 = addInt(i_10960456, 1);
            }
        } while(false);
      } while(false);
    }
    
    }
    else {
      F.line = 174;
    if (father_10935138.kids != null) { father_10935138.kids.push({heading: x_10935137, kids: [], sortId: (father_10935138.kids != null ? father_10935138.kids.length : 0), doSort: false}); } else { father_10935138.kids = [{heading: x_10935137, kids: [], sortId: (father_10935138.kids != null ? father_10935138.kids.length : 0), doSort: false}]; };
    }
    }}
  framePtr = F.prev;

  
}

function extract_items_10890081(x_10890083, heading_10890084, items_10890087, items_10890087_Idx) {
      var Tmp1;

  var F={procname:"dochack.extractItems",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((x_10890083 == null)) {
    F.line = 81;
    break BeforeRet;
    }
    
      if (!!((x_10890083.heading == null))) Tmp1 = false; else {        Tmp1 = (x_10890083.heading.textContent == heading_10890084);      }    if (Tmp1) {
    L2: do {
      F.line = 83;
      var i_10895021 = 0;
      F.line = 104;
      var colontmp__10960483 = 0;
      F.line = 83;
      colontmp__10960483 = (x_10890083.kids != null ? x_10890083.kids.length : 0);
      F.line = 106;
      var i_10960484 = 0;
      L3: do {
        F.line = 107;
          L4: while (true) {
          if (!(i_10960484 < colontmp__10960483)) break L4;
            F.line = 83;
            i_10895021 = i_10960484;
            F.line = 84;
            if (items_10890087[items_10890087_Idx] != null) { items_10890087[items_10890087_Idx].push(x_10890083.kids[chckIndx(i_10895021, 0, (x_10890083.kids != null ? x_10890083.kids.length : 0)+0-1)-0].heading); } else { items_10890087[items_10890087_Idx] = [x_10890083.kids[chckIndx(i_10895021, 0, (x_10890083.kids != null ? x_10890083.kids.length : 0)+0-1)-0].heading]; };
            F.line = 109;
            i_10960484 = addInt(i_10960484, 1);
          }
      } while(false);
    } while(false);
    }
    else {
      L5: do {
        F.line = 86;
        var i_10895041 = 0;
        F.line = 104;
        var colontmp__10960487 = 0;
        F.line = 86;
        colontmp__10960487 = (x_10890083.kids != null ? x_10890083.kids.length : 0);
        F.line = 106;
        var i_10960488 = 0;
        L6: do {
          F.line = 107;
            L7: while (true) {
            if (!(i_10960488 < colontmp__10960487)) break L7;
              F.line = 86;
              i_10895041 = i_10960488;
              F.line = 87;
              var it_10895042 = x_10890083.kids[chckIndx(i_10895041, 0, (x_10890083.kids != null ? x_10890083.kids.length : 0)+0-1)-0];
              F.line = 88;
              extract_items_10890081(it_10895042, heading_10890084, items_10890087, items_10890087_Idx);
              F.line = 109;
              i_10960488 = addInt(i_10960488, 1);
            }
        } while(false);
      } while(false);
    }
    
  } while (false);
  framePtr = F.prev;

  
}

function tree_10881020(tag_10881022, kids_10881024) {
  var result_10881025 = null;

  var F={procname:"dochack.tree",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 11;
    result_10881025 = document.createElement(toJSStr(tag_10881022));
    L1: do {
      F.line = 12;
      var k_10881056 = null;
      F.line = 3;
      var i_10960504 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_10960504 < (kids_10881024 != null ? kids_10881024.length : 0))) break L3;
            F.line = 12;
            k_10881056 = kids_10881024[chckIndx(i_10960504, 0, (kids_10881024 != null ? kids_10881024.length : 0)+0-1)-0];
            F.line = 13;
            result_10881025.appendChild(k_10881056);
            F.line = 6;
            i_10960504 = addInt(i_10960504, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_10881025;

}

function text_10881152(s_10881154) {
  var result_10881155 = null;

  var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 27;
    result_10881155 = document.createTextNode(s_10881154);
  framePtr = F.prev;

  return result_10881155;

}

function sys_fatal_1227618(message_1227622) {
  var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
  framePtr = F;
    F.line = 50;
    var e_1227803 = null;
    F.line = 53;
    e_1227803 = {m_type: NTI1128887, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    F.line = 54;
    e_1227803.message = nimCopy(null, message_1227622, NTI1123014);
    F.line = 55;
    raiseException(e_1227803, "AssertionError");
  framePtr = F.prev;

  
}

function raise_assert_1227614(msg_1227616) {
  var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 22;
    sys_fatal_1227618(msg_1227616);
  framePtr = F.prev;

  
}

function failed_assert_impl_1227866(msg_1227868) {
  var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 29;
    raise_assert_1227614(msg_1227868);
  framePtr = F.prev;

  
}

function uncovered_10940022(x_10940024) {
      var Tmp1;
    var Tmp2;

  var result_10940025 = null;

  var F={procname:"dochack.uncovered",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
  BeforeRet: do {
      if (!((x_10940024.kids != null ? x_10940024.kids.length : 0) == 0)) Tmp1 = false; else {        Tmp1 = !((x_10940024.heading == null));      }    if (Tmp1) {
    F.line = 194;
    if (!(x_10940024.heading.hasOwnProperty('__karaxMarker__'))) {
    Tmp2 = x_10940024;
    }
    else {
    Tmp2 = null;
    }
    
    result_10940025 = Tmp2;
    break BeforeRet;
    }
    
    F.line = 195;
    result_10940025 = {heading: x_10940024.heading, kids: [], sortId: x_10940024.sortId, doSort: x_10940024.doSort};
    L3: do {
      F.line = 197;
      var i_10945036 = 0;
      F.line = 104;
      var colontmp__10960515 = 0;
      F.line = 197;
      colontmp__10960515 = (x_10940024.kids != null ? x_10940024.kids.length : 0);
      F.line = 106;
      var i_10960516 = 0;
      L4: do {
        F.line = 107;
          L5: while (true) {
          if (!(i_10960516 < colontmp__10960515)) break L5;
            F.line = 197;
            i_10945036 = i_10960516;
            F.line = 198;
            var y_10945037 = uncovered_10940022(x_10940024.kids[chckIndx(i_10945036, 0, (x_10940024.kids != null ? x_10940024.kids.length : 0)+0-1)-0]);
            if (!((y_10945037 == null))) {
            F.line = 199;
            if (result_10940025.kids != null) { result_10940025.kids.push(y_10945037); } else { result_10940025.kids = [y_10945037]; };
            }
            
            F.line = 109;
            i_10960516 = addInt(i_10960516, 1);
          }
      } while(false);
    } while(false);
    if (((result_10940025.kids != null ? result_10940025.kids.length : 0) == 0)) {
    F.line = 200;
    result_10940025 = null;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_10940025;

}

function merge_tocs_10950034(orig_10950036, news_10950037) {
  var result_10950038 = null;

  var F={procname:"dochack.mergeTocs",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 203;
    result_10950038 = uncovered_10940022(orig_10950036);
    if ((result_10950038 == null)) {
    F.line = 205;
    result_10950038 = news_10950037;
    }
    else {
      L1: do {
        F.line = 207;
        var i_10950059 = 0;
        F.line = 104;
        var colontmp__10960510 = 0;
        F.line = 207;
        colontmp__10960510 = (news_10950037.kids != null ? news_10950037.kids.length : 0);
        F.line = 106;
        var i_10960511 = 0;
        L2: do {
          F.line = 107;
            L3: while (true) {
            if (!(i_10960511 < colontmp__10960510)) break L3;
              F.line = 207;
              i_10950059 = i_10960511;
              F.line = 208;
              if (result_10950038.kids != null) { result_10950038.kids.push(news_10950037.kids[chckIndx(i_10950059, 0, (news_10950037.kids != null ? news_10950037.kids.length : 0)+0-1)-0]); } else { result_10950038.kids = [news_10950037.kids[chckIndx(i_10950059, 0, (news_10950037.kids != null ? news_10950037.kids.length : 0)+0-1)-0]]; };
              F.line = 109;
              i_10960511 = addInt(i_10960511, 1);
            }
        } while(false);
      } while(false);
    }
    
  framePtr = F.prev;

  return result_10950038;

}

function build_toc_10950080(orig_10950082, types_10950084, procs_10950085) {
  var result_10950086 = null;

  var F={procname:"dochack.buildToc",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 211;
    var new_stuff_10950102 = {heading: null, kids: [], doSort: true, sortId: 0};
    L1: do {
      F.line = 212;
      var t_10960214 = null;
      F.line = 184;
      var i_10960499 = 0;
      F.line = 185;
      var l_10960500 = (types_10950084 != null ? types_10950084.length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_10960499 < l_10960500)) break L3;
            F.line = 212;
            t_10960214 = types_10950084[chckIndx(i_10960499, 0, (types_10950084 != null ? types_10950084.length : 0)+0-1)-0];
            F.line = 213;
            var c_10960230 = {heading: t_10960214.cloneNode(true), kids: [], doSort: true, sortId: 0};
            F.line = 214;
            t_10960214.__karaxMarker__ = true;
            L4: do {
              F.line = 215;
              var p_10960237 = null;
              F.line = 184;
              var i_10960496 = 0;
              F.line = 185;
              var l_10960497 = (procs_10950085 != null ? procs_10950085.length : 0);
              L5: do {
                F.line = 186;
                  L6: while (true) {
                  if (!(i_10960496 < l_10960497)) break L6;
                    F.line = 215;
                    p_10960237 = procs_10950085[chckIndx(i_10960496, 0, (procs_10950085 != null ? procs_10950085.length : 0)+0-1)-0];
                    if (!(p_10960237.hasOwnProperty('__karaxMarker__'))) {
                    F.line = 217;
                    var xx_10960238 = p_10960237.parentNode.getElementsByClassName("attachedType");
                    if ((((xx_10960238 != null ? xx_10960238.length : 0) == 1) && (xx_10960238[chckIndx(0, 0, (xx_10960238 != null ? xx_10960238.length : 0)+0-1)-0].textContent == t_10960214.textContent))) {
                    F.line = 220;
                    var q_10960246 = tree_10881020(makeNimstrLit("A"), [text_10881152(p_10960237.title)]);
                    F.line = 221;
                    q_10960246.setAttribute("href", p_10960237.getAttribute("href"));
                    F.line = 222;
                    if (c_10960230.kids != null) { c_10960230.kids.push({heading: q_10960246, kids: [], sortId: 0, doSort: false}); } else { c_10960230.kids = [{heading: q_10960246, kids: [], sortId: 0, doSort: false}]; };
                    F.line = 223;
                    p_10960237.__karaxMarker__ = true;
                    }
                    
                    }
                    
                    F.line = 188;
                    i_10960496 = addInt(i_10960496, 1);
                    if (!(((procs_10950085 != null ? procs_10950085.length : 0) == l_10960497))) {
                    F.line = 189;
                    failed_assert_impl_1227866(makeNimstrLit("/home/travis/build/nim-lang/Nim/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            F.line = 224;
            if (new_stuff_10950102.kids != null) { new_stuff_10950102.kids.push(c_10960230); } else { new_stuff_10950102.kids = [c_10960230]; };
            F.line = 188;
            i_10960499 = addInt(i_10960499, 1);
            if (!(((types_10950084 != null ? types_10950084.length : 0) == l_10960500))) {
            F.line = 189;
            failed_assert_impl_1227866(makeNimstrLit("/home/travis/build/nim-lang/Nim/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    F.line = 225;
    result_10950086 = merge_tocs_10950034(orig_10950082, new_stuff_10950102);
  framePtr = F.prev;

  return result_10950086;

}

function add_10881100(parent_10881102, kid_10881103) {
      var Tmp1;
        var Tmp2;

  var F={procname:"dochack.add",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
      if (!(parent_10881102.nodeName == "TR")) Tmp1 = false; else {        if ((kid_10881103.nodeName == "TD")) Tmp2 = true; else {          Tmp2 = (kid_10881103.nodeName == "TH");        }        Tmp1 = Tmp2;      }    if (Tmp1) {
    F.line = 18;
    var k_10881104 = document.createElement("TD");
    F.line = 19;
    k_10881104.appendChild(kid_10881103);
    F.line = 20;
    parent_10881102.appendChild(k_10881104);
    }
    else {
      F.line = 22;
    parent_10881102.appendChild(kid_10881103);
    }
    
  framePtr = F.prev;

  
}

function set_class_10881118(e_10881120, value_10881121) {
  var F={procname:"dochack.setClass",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 25;
    e_10881120.setAttribute("class", toJSStr(value_10881121));
  framePtr = F.prev;

  
}

function to_html_10895071(x_10895073, is_root_10895074) {
      var Tmp1;

    function HEX3Aanonymous_10900015(a_10900017, b_10900018) {
          var Tmp1;

      var result_10900019 = 0;

      var F={procname:"toHtml.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
      framePtr = F;
      BeforeRet: do {
          if (!!((a_10900017.heading == null))) Tmp1 = false; else {            Tmp1 = !((b_10900018.heading == null));          }        if (Tmp1) {
        F.line = 106;
        var x_10910009 = a_10900017.heading.textContent;
        F.line = 107;
        var y_10910010 = b_10900018.heading.textContent;
        if ((x_10910009 < y_10910010)) {
        F.line = 108;
        result_10900019 = -1;
        break BeforeRet;
        }
        
        if ((y_10910010 < x_10910009)) {
        F.line = 109;
        result_10900019 = 1;
        break BeforeRet;
        }
        
        F.line = 110;
        result_10900019 = 0;
        break BeforeRet;
        }
        else {
          F.line = 113;
          result_10900019 = subInt(a_10900017.sortId, b_10900018.sortId);
          break BeforeRet;
        }
        
      } while (false);
      framePtr = F.prev;

      return result_10900019;

    }

  var result_10895075 = null;

  var F={procname:"dochack.toHtml",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((x_10895073 == null)) {
    F.line = 91;
    result_10895075 = null;
    break BeforeRet;
    }
    
    if (((x_10895073.kids != null ? x_10895073.kids.length : 0) == 0)) {
    if ((x_10895073.heading == null)) {
    F.line = 93;
    result_10895075 = null;
    break BeforeRet;
    }
    
    F.line = 94;
    result_10895075 = x_10895073.heading.cloneNode(true);
    break BeforeRet;
    }
    
    F.line = 95;
    result_10895075 = tree_10881020(makeNimstrLit("DIV"), []);
      if (!!((x_10895073.heading == null))) Tmp1 = false; else {        Tmp1 = !(x_10895073.heading.hasOwnProperty('__karaxMarker__'));      }    if (Tmp1) {
    F.line = 97;
    add_10881100(result_10895075, x_10895073.heading.cloneNode(true));
    }
    
    F.line = 98;
    var ul_10900012 = tree_10881020(makeNimstrLit("UL"), []);
    if (is_root_10895074) {
    F.line = 100;
    set_class_10881118(ul_10900012, makeNimstrLit("simple simple-toc"));
    }
    else {
      F.line = 102;
    set_class_10881118(ul_10900012, makeNimstrLit("simple"));
    }
    
    if (x_10895073.doSort) {
    F.line = 104;
    x_10895073.kids.sort(HEX3Aanonymous_10900015);
    }
    
    L2: do {
      F.line = 115;
      var k_10925214 = null;
      F.line = 182;
      var colontmp__10960521 = null;
      F.line = 115;
      colontmp__10960521 = x_10895073.kids;
      F.line = 184;
      var i_10960523 = 0;
      F.line = 185;
      var l_10960524 = (colontmp__10960521 != null ? colontmp__10960521.length : 0);
      L3: do {
        F.line = 186;
          L4: while (true) {
          if (!(i_10960523 < l_10960524)) break L4;
            F.line = 115;
            k_10925214 = colontmp__10960521[chckIndx(i_10960523, 0, (colontmp__10960521 != null ? colontmp__10960521.length : 0)+0-1)-0];
            F.line = 116;
            var y_10925215 = to_html_10895071(k_10925214, false);
            if (!((y_10925215 == null))) {
            F.line = 118;
            add_10881100(ul_10900012, tree_10881020(makeNimstrLit("LI"), [y_10925215]));
            }
            
            F.line = 188;
            i_10960523 = addInt(i_10960523, 1);
            if (!(((colontmp__10960521 != null ? colontmp__10960521.length : 0) == l_10960524))) {
            F.line = 189;
            failed_assert_impl_1227866(makeNimstrLit("/home/travis/build/nim-lang/Nim/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (!((ul_10900012.childNodes.length == 0))) {
    F.line = 119;
    add_10881100(result_10895075, ul_10900012);
    }
    
    if ((result_10895075.childNodes.length == 0)) {
    F.line = 120;
    result_10895075 = null;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_10895075;

}

function replace_by_id_10881172(id_10881174, new_tree_10881175) {
  var F={procname:"dochack.replaceById",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 32;
    var x_10881176 = document.getElementById(id_10881174);
    F.line = 33;
    x_10881176.parentNode.replaceChild(new_tree_10881175, x_10881176);
    F.line = 34;
    new_tree_10881175.id = id_10881174;
  framePtr = F.prev;

  
}

function togglevis_10960333(d_10960335) {
  var F={procname:"dochack.togglevis",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 230;
        if (d_10960335.style.display == 'none')
      d_10960335.style.display = 'inline';
    else
      d_10960335.style.display = 'none';
  
  framePtr = F.prev;

  
}

function groupBy(value_10960351) {
  var F={procname:"dochack.groupBy",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 238;
    var toc_10960352 = document.getElementById("toc-list");
    if ((alternative_10960319[0] == null)) {
    F.line = 240;
    var tt_10960373 = {heading: null, kids: [], sortId: 0, doSort: false};
    F.line = 241;
    to_toc_10935135(toc_10960352, tt_10960373);
    F.line = 242;
    tt_10960373 = tt_10960373.kids[chckIndx(0, 0, (tt_10960373.kids != null ? tt_10960373.kids.length : 0)+0-1)-0];
    F.line = 244;
    var types_10960390 = [[]];
    F.line = 245;
    var procs_10960407 = [[]];
    F.line = 247;
    extract_items_10890081(tt_10960373, "Types", types_10960390, 0);
    F.line = 248;
    extract_items_10890081(tt_10960373, "Procs", procs_10960407, 0);
    F.line = 249;
    extract_items_10890081(tt_10960373, "Converters", procs_10960407, 0);
    F.line = 250;
    extract_items_10890081(tt_10960373, "Methods", procs_10960407, 0);
    F.line = 251;
    extract_items_10890081(tt_10960373, "Templates", procs_10960407, 0);
    F.line = 252;
    extract_items_10890081(tt_10960373, "Macros", procs_10960407, 0);
    F.line = 253;
    extract_items_10890081(tt_10960373, "Iterators", procs_10960407, 0);
    F.line = 255;
    var ntoc_10960415 = build_toc_10950080(tt_10960373, types_10960390[0], procs_10960407[0]);
    F.line = 256;
    var x_10960416 = to_html_10895071(ntoc_10960415, true);
    F.line = 257;
    alternative_10960319[0] = tree_10881020(makeNimstrLit("DIV"), [x_10960416]);
    }
    
    if ((value_10960351 == "type")) {
    F.line = 259;
    replace_by_id_10881172("tocRoot", alternative_10960319[0]);
    }
    else {
      F.line = 261;
    replace_by_id_10881172("tocRoot", tree_10881020(makeNimstrLit("DIV"), []));
    }
    
    F.line = 262;
    togglevis_10960333(document.getElementById("toc-list"));
  framePtr = F.prev;

  
}
var db_10960527 = [null];
var contents_10960529 = [null];
var oldtoc_10970403 = [null];
var timer_10970404 = [null];

function raiseRangeError() {
    var eHEX60gensym1330257_1335203 = null;
    eHEX60gensym1330257_1335203 = {m_type: NTI1128899, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    eHEX60gensym1330257_1335203.message = nimCopy(null, makeNimstrLit("value out of range"), NTI1123014);
    eHEX60gensym1330257_1335203.parent = null;
    raiseException(eHEX60gensym1330257_1335203, "RangeError");

  
}

function nsuToLowerAsciiChar(c_9855023) {
  var result_9855024 = 0;

  var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    if ((ConstSet2[c_9855023] != undefined)) {
    F.line = 209;
    result_9855024 = chckRange(addInt(c_9855023, 32), 0, 255);
    }
    else {
      F.line = 211;
      result_9855024 = c_9855023;
    }
    
  framePtr = F.prev;

  return result_9855024;

}

function fuzzy_match_10806054(pattern_10806056, str_10806057) {
              var Tmp4;
              var Tmp5;
                var Tmp6;

  var result_10806061 = {Field0: 0, Field1: false};

  var F={procname:"fuzzysearch.fuzzyMatch",prev:framePtr,filename:"fuzzysearch.nim",line:0};
  framePtr = F;
    F.line = 36;
    var score_state_10806062 = -100;
    F.line = 37;
    var header_matched_10806063 = false;
    F.line = 38;
    var unmatched_leading_char_count_10806065 = 0;
    F.line = 39;
    var consecutive_match_count_10806067 = 0;
    F.line = 40;
    var str_index_10806069 = 0;
    F.line = 41;
    var pat_index_10806071 = 0;
    F.line = 42;
    var score_10806073 = 0;
    L1: do {
      F.line = 48;
        L2: while (true) {
        if (!((str_index_10806069 < (str_10806057 != null ? str_10806057.length : 0)) && (pat_index_10806071 < (pattern_10806056 != null ? pattern_10806056.length : 0)))) break L2;
          L3: do {
            F.line = 50;
            var pattern_char_10806079 = nsuToLowerAsciiChar(pattern_10806056.charCodeAt(chckIndx(pat_index_10806071, 0, (pattern_10806056 != null ? pattern_10806056.length : 0)+0-1)-0));
            F.line = 51;
            var str_char_10806080 = nsuToLowerAsciiChar(str_10806057.charCodeAt(chckIndx(str_index_10806069, 0, (str_10806057 != null ? str_10806057.length : 0)+0-1)-0));
            if ((ConstSet3[pattern_char_10806079] != undefined)) {
            F.line = 55;
            pat_index_10806071 = addInt(pat_index_10806071, 1);
            F.line = 56;
            break L3;
            }
            
            if ((ConstSet4[str_char_10806080] != undefined)) {
            F.line = 58;
            str_index_10806069 = addInt(str_index_10806069, 1);
            F.line = 59;
            break L3;
            }
            
            if ((!(header_matched_10806063) && (str_char_10806080 == 58))) {
            F.line = 64;
            header_matched_10806063 = true;
            F.line = 65;
            score_state_10806062 = -100;
            F.line = 66;
            score_10806073 = ((Math.floor((5.0000000000000000e-01 * score_10806073)))|0);
            F.line = 67;
            pat_index_10806071 = 0;
            F.line = 68;
            str_index_10806069 = addInt(str_index_10806069, 1);
            F.line = 69;
            break L3;
            }
            
            if ((str_char_10806080 == pattern_char_10806079)) {
            F.line = 72;
            switch (score_state_10806062) {
            case -100:
            case 20:
              F.line = 74;
              score_state_10806062 = 10;
              break;
            case 0:
              F.line = 77;
              score_state_10806062 = 5;
              F.line = 77;
              score_10806073 = addInt(score_10806073, score_state_10806062);
              break;
            case 10:
            case 5:
              F.line = 80;
              consecutive_match_count_10806067 = addInt(consecutive_match_count_10806067, 1);
              F.line = 81;
              score_state_10806062 = 5;
              F.line = 82;
              score_10806073 = addInt(score_10806073, mulInt(5, consecutive_match_count_10806067));
              if ((score_state_10806062 == 10)) {
              F.line = 85;
              score_10806073 = addInt(score_10806073, 10);
              }
              
              F.line = 87;
              var on_boundary_10820042 = (pat_index_10806071 == (pattern_10806056 != null ? (pattern_10806056.length-1) : -1));
              if ((!(on_boundary_10820042) && (str_index_10806069 < (str_10806057 != null ? (str_10806057.length-1) : -1)))) {
              F.line = 90;
              var next_pattern_char_10820043 = nsuToLowerAsciiChar(pattern_10806056.charCodeAt(chckIndx(addInt(pat_index_10806071, 1), 0, (pattern_10806056 != null ? pattern_10806056.length : 0)+0-1)-0));
              F.line = 91;
              var next_str_char_10820044 = nsuToLowerAsciiChar(str_10806057.charCodeAt(chckIndx(addInt(str_index_10806069, 1), 0, (str_10806057 != null ? str_10806057.length : 0)+0-1)-0));
              F.line = 94;
              if (!!((ConstSet5[next_str_char_10820044] != undefined))) Tmp4 = false; else {                Tmp4 = !((next_str_char_10820044 == next_pattern_char_10820043));              }              on_boundary_10820042 = Tmp4;
              }
              
              if (on_boundary_10820042) {
              F.line = 99;
              score_state_10806062 = 20;
              F.line = 99;
              score_10806073 = addInt(score_10806073, score_state_10806062);
              }
              
              break;
            case -1:
            case -3:
              F.line = 102;
              if (!((ConstSet6[str_10806057.charCodeAt(chckIndx(subInt(str_index_10806069, 1), 0, (str_10806057 != null ? str_10806057.length : 0)+0-1)-0)] != undefined))) Tmp5 = true; else {                if (!(ConstSet7[str_10806057.charCodeAt(chckIndx(subInt(str_index_10806069, 1), 0, (str_10806057 != null ? str_10806057.length : 0)+0-1)-0)] != undefined)) Tmp6 = false; else {                  Tmp6 = (ConstSet8[str_10806057.charCodeAt(chckIndx(str_index_10806069, 0, (str_10806057 != null ? str_10806057.length : 0)+0-1)-0)] != undefined);                }                Tmp5 = Tmp6;              }              var is_leading_char_10850008 = Tmp5;
              if (is_leading_char_10850008) {
              F.line = 109;
              score_state_10806062 = 10;
              }
              else {
                F.line = 113;
                score_state_10806062 = 0;
                F.line = 113;
                score_10806073 = addInt(score_10806073, score_state_10806062);
              }
              
              break;
            }
            F.line = 114;
            pat_index_10806071 = addInt(pat_index_10806071, 1);
            }
            else {
              F.line = 117;
              switch (score_state_10806062) {
              case -100:
                F.line = 119;
                score_state_10806062 = -3;
                F.line = 119;
                score_10806073 = addInt(score_10806073, score_state_10806062);
                break;
              case 5:
                F.line = 122;
                score_state_10806062 = -1;
                F.line = 122;
                score_10806073 = addInt(score_10806073, score_state_10806062);
                F.line = 123;
                consecutive_match_count_10806067 = 0;
                break;
              case -3:
                if ((unmatched_leading_char_count_10806065 < 3)) {
                F.line = 127;
                score_state_10806062 = -3;
                F.line = 127;
                score_10806073 = addInt(score_10806073, score_state_10806062);
                }
                
                F.line = 128;
                unmatched_leading_char_count_10806065 = addInt(unmatched_leading_char_count_10806065, 1);
                break;
              default: 
                F.line = 131;
                score_state_10806062 = -1;
                F.line = 131;
                score_10806073 = addInt(score_10806073, score_state_10806062);
                break;
              }
            }
            
            F.line = 133;
            str_index_10806069 = addInt(str_index_10806069, 1);
          } while(false);
        }
    } while(false);
    F.line = 136;
    var colontmp__10980060 = nimMax(0, score_10806073);
    F.line = 137;
    var colontmp__10980061 = (0 < score_10806073);
    F.line = 135;
    nimCopy(result_10806061, {Field0: colontmp__10980060, Field1: colontmp__10980061}, NTI10806058);
  framePtr = F.prev;

  return result_10806061;

}

function text_10881135(s_10881137) {
  var result_10881138 = null;

  var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 26;
    result_10881138 = document.createTextNode(toJSStr(s_10881137));
  framePtr = F.prev;

  return result_10881138;

}

function dosearch_10960546(value_10960548) {

    function HEX3Aanonymous_10970273(a_10970282, b_10970283) {
      var result_10970287 = 0;

      var F={procname:"dosearch.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
      framePtr = F;
        F.line = 305;
        result_10970287 = subInt(b_10970283["Field1"], a_10970282["Field1"]);
      framePtr = F.prev;

      return result_10970287;

    }

  var result_10960549 = null;

  var F={procname:"dochack.dosearch",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    if (((db_10960527[0] != null ? db_10960527[0].length : 0) == 0)) {
    F.line = 272;
    var stuff_10960555 = null;
    F.line = 273;
        var request = new XMLHttpRequest();
    request.open("GET", "theindex.html", false);
    request.send(null);

    var doc = document.implementation.createHTMLDocument("theindex");
    doc.documentElement.innerHTML = request.responseText;

    //parser=new DOMParser();
    //doc=parser.parseFromString("<html></html>", "text/html");

    stuff_10960555 = doc.documentElement;
    
    F.line = 286;
    db_10960527[0] = nimCopy(null, stuff_10960555.getElementsByClassName("reference"), NTI1749305);
    F.line = 287;
    contents_10960529[0] = nimCopy(null, [], NTI10960570);
    L1: do {
      F.line = 288;
      var ahref_10970214 = null;
      F.line = 184;
      var i_10980040 = 0;
      F.line = 185;
      var l_10980041 = (db_10960527[0] != null ? db_10960527[0].length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_10980040 < l_10980041)) break L3;
            F.line = 288;
            ahref_10970214 = db_10960527[0][chckIndx(i_10980040, 0, (db_10960527[0] != null ? db_10960527[0].length : 0)+0-1)-0];
            F.line = 289;
            if (contents_10960529[0] != null) { contents_10960529[0].push(ahref_10970214.getAttribute("data-doc-search-tag")); } else { contents_10960529[0] = [ahref_10970214.getAttribute("data-doc-search-tag")]; };
            F.line = 188;
            i_10980040 = addInt(i_10980040, 1);
            if (!(((db_10960527[0] != null ? db_10960527[0].length : 0) == l_10980041))) {
            F.line = 189;
            failed_assert_impl_1227866(makeNimstrLit("/home/travis/build/nim-lang/Nim/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    }
    
    F.line = 290;
    var ul_10970225 = tree_10881020(makeNimstrLit("UL"), []);
    F.line = 291;
    result_10960549 = tree_10881020(makeNimstrLit("DIV"), []);
    F.line = 292;
    set_class_10881118(result_10960549, makeNimstrLit("search_results"));
    F.line = 293;
    var matches_10970246 = [];
    L4: do {
      F.line = 294;
      var i_10970259 = 0;
      F.line = 104;
      var colontmp__10980047 = 0;
      F.line = 294;
      colontmp__10980047 = (db_10960527[0] != null ? db_10960527[0].length : 0);
      F.line = 106;
      var i_10980048 = 0;
      L5: do {
        F.line = 107;
          L6: while (true) {
          if (!(i_10980048 < colontmp__10980047)) break L6;
            F.line = 294;
            i_10970259 = i_10980048;
            L7: do {
              F.line = 295;
              var c_10970260 = contents_10960529[0][chckIndx(i_10970259, 0, (contents_10960529[0] != null ? contents_10960529[0].length : 0)+0-1)-0];
              if (((c_10970260 == "Examples") || (c_10970260 == "PEG construction"))) {
              F.line = 300;
              break L7;
              }
              
              F.line = 301;
              var colontmp__10980055 = fuzzy_match_10806054(value_10960548, c_10970260);
              F.line = 301;
              var score_10970261 = colontmp__10980055["Field0"];
              F.line = 301;
              var matched_10970262 = colontmp__10980055["Field1"];
              if (matched_10970262) {
              F.line = 303;
              if (matches_10970246 != null) { matches_10970246.push({Field0: db_10960527[0][chckIndx(i_10970259, 0, (db_10960527[0] != null ? db_10960527[0].length : 0)+0-1)-0], Field1: score_10970261}); } else { matches_10970246 = [{Field0: db_10960527[0][chckIndx(i_10970259, 0, (db_10960527[0] != null ? db_10960527[0].length : 0)+0-1)-0], Field1: score_10970261}]; };
              }
              
            } while(false);
            F.line = 109;
            i_10980048 = addInt(i_10980048, 1);
          }
      } while(false);
    } while(false);
    F.line = 305;
    matches_10970246.sort(HEX3Aanonymous_10970273);
    L8: do {
      F.line = 306;
      var i_10970326 = 0;
      F.line = 104;
      var colontmp__10980052 = 0;
      F.line = 306;
      colontmp__10980052 = nimMin((matches_10970246 != null ? matches_10970246.length : 0), 19);
      F.line = 106;
      var i_10980053 = 0;
      L9: do {
        F.line = 107;
          L10: while (true) {
          if (!(i_10980053 < colontmp__10980052)) break L10;
            F.line = 306;
            i_10970326 = i_10980053;
            F.line = 307;
            matches_10970246[chckIndx(i_10970326, 0, (matches_10970246 != null ? matches_10970246.length : 0)+0-1)-0]["Field0"].innerHTML = matches_10970246[chckIndx(i_10970326, 0, (matches_10970246 != null ? matches_10970246.length : 0)+0-1)-0]["Field0"].getAttribute("data-doc-search-tag");
            F.line = 308;
            add_10881100(ul_10970225, tree_10881020(makeNimstrLit("LI"), [matches_10970246[chckIndx(i_10970326, 0, (matches_10970246 != null ? matches_10970246.length : 0)+0-1)-0]["Field0"]]));
            F.line = 109;
            i_10980053 = addInt(i_10980053, 1);
          }
      } while(false);
    } while(false);
    if ((ul_10970225.childNodes.length == 0)) {
    F.line = 310;
    add_10881100(result_10960549, tree_10881020(makeNimstrLit("B"), [text_10881135(makeNimstrLit("no search results"))]));
    }
    else {
      F.line = 312;
      add_10881100(result_10960549, tree_10881020(makeNimstrLit("B"), [text_10881135(makeNimstrLit("search results"))]));
      F.line = 313;
      add_10881100(result_10960549, ul_10970225);
    }
    
  framePtr = F.prev;

  return result_10960549;

}

function search() {

    function wrapper_10970435() {
      var F={procname:"search.wrapper",prev:framePtr,filename:"dochack.nim",line:0};
      framePtr = F;
        F.line = 320;
        var elem_10970437 = document.getElementById("searchInput");
        F.line = 321;
        var value_10970438 = elem_10970437.value;
        if (!(((value_10970438 != null ? value_10970438.length : 0) == 0))) {
        if ((oldtoc_10970403[0] == null)) {
        F.line = 324;
        oldtoc_10970403[0] = document.getElementById("tocRoot");
        }
        
        F.line = 325;
        var results_10975006 = dosearch_10960546(value_10970438);
        F.line = 326;
        replace_by_id_10881172("tocRoot", results_10975006);
        }
        else {
        if (!((oldtoc_10970403[0] == null))) {
        F.line = 328;
        replace_by_id_10881172("tocRoot", oldtoc_10970403[0]);
        }
        }
      framePtr = F.prev;

      
    }

  var F={procname:"dochack.search",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    if (!((timer_10970404[0] == null))) {
    F.line = 330;
    clearTimeout(timer_10970404[0]);
    }
    
    F.line = 331;
    timer_10970404[0] = setTimeout(wrapper_10970435, 400);
  framePtr = F.prev;

  
}
